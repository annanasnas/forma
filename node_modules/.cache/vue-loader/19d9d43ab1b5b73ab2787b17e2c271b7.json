{"remainingRequest":"/Users/anastasia/Documents/forma/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anastasia/Documents/forma/src/components/global/Trigger.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/anastasia/Documents/forma/src/components/global/Trigger.vue","mtime":1614882737031},{"path":"/Users/anastasia/Documents/forma/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/forma/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/anastasia/Documents/forma/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/anastasia/Documents/forma/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUcmlnZ2VyJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb2JzZXJ2ZXI6IG51bGwKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLm9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGVudHJpZXMgPT4gewogICAgICAgIHRoaXMuaGFuZGxlSW50ZXJzZWN0KGVudHJpZXNbMF0pOyAgICAgIAogICAgfSwgdGhpcy5vcHRpb25zKTsKICAgIHRoaXMub2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLiRyZWZzLnRyaWdnZXIpOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlSW50ZXJzZWN0KGVudHJ5KSB7CiAgICAgICAgaWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoInRyaWdnZXJTaG93IikKICAgICAgICB9ZWxzZXsKICAgICAgICAgIAogICAgICAgICAgICB0aGlzLiRlbWl0KCJ0cmlnZ2VyRG93bnMiKQogICAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Trigger.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Trigger.vue","sourceRoot":"src/components/global","sourcesContent":["<template>\n  <div ref=\"trigger\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'Trigger',\n  data() {\n    return {\n      observer: null\n    }\n  },\n  mounted() {\n    this.observer = new IntersectionObserver(entries => {\n        this.handleIntersect(entries[0]);      \n    }, this.options);\n    this.observer.observe(this.$refs.trigger);\n  },\n  beforeDestroy() {\n    this.observer.disconnect();\n  },\n  methods: {\n    handleIntersect(entry) {\n        if (entry.isIntersecting) {\n            this.$emit(\"triggerShow\")\n        }else{\n          \n            this.$emit(\"triggerDowns\")\n        }\n    }\n  }\n};\n</script>"]}]}